<div id="faq">
  <div class="container">
    <h1>FAQ</h1>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>What is this page for?</h4>
      <p>To give more info about the starred items on the <a href="/get-server">Get a Server!</a> page</p>
      <p><small>Please read all fine print closely because something you're looking for MAY not be available and as much as we'd like to do everything under the sun, we just realistically can't. We have limits, we aren't superheroes</small></p>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>So what were those asterisks for?</h4>
      <p>Like I said, we aren't super heroes so we do have some limitations.</p>
      <ul>
        <li><strong>We can run any server</strong> - While it is true that if there is a server out there we can most likely run it, we want to place a caveat to say that some servers might be out of date or their files might be lacking. Because of that we cant guarantee every server is viable in this day and age. We'll try to set up your request but if it's not something readily supported, it might take some time before your server is online. We'll keep you posted along the way</li>
        <li><strong>We'll try to set up your server within 30 minutes</strong> We don't currently have an automated server set up process so a technician will have to be the one to log in and set up your server which can take 30 minutes to an hour. We'll always keep you posted and if its urgent, just let us know and we'll get someone on it right away.</li>
        <li><strong>Server features</strong> You can pick and choose features you want and some do cost extra, like custom domains. But fear not, you can always revoke these extra features at any time and we'll adjust your billing to reflect it the changes.</li>
        <li><strong>Server updates</strong> You can keep your server on a certain version if you don't want to upgrade server versions (as long as the server devs, i.e., steam, allow you to be on a version separate from the most recent) and choose when you want to upgrade</li>
        <li><strong>My game isn't on the list</strong> If your game isn't on the list, <a href="/contact">just send us a message</a> and we'll try to set it up for you anyway</li>
      </ul>
    </div>
    <!-- <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>Why do I see placeholders like "Socialites" all over the place? What's the best way to customize these?</h4>
      <p>Because projects are often generated before product and/or company names are finalized, we felt it made more sense to use easily find-and-replaceable placeholders than to prompt for an app or company name at the beginning. (It's a lot easier to find/replace "Socialites" without conflicts than it is to find/replace a more commonly-used word.)</p>
      <p>When you've got your product, company name, and branding finalized, here are the placeholders you'll want to switch out:</p>
      <ul>
        <li><strong>Pinots Games</strong> - You can replace any instance of this with the name of your product.</li>
        <li><strong>Socialites</strong> - This placeholder is used for the entity name in the default legal terms &amp; privacy policy, and can be replaced with the name of the company behind your app.</li>
        <li><strong>NEW_APP_CREATION_CALENDAR_DATE</strong> - Replace this with the current date.</li>
        <li><strong>NEW_APP_COMPANY_ABOUT_HREF</strong> - This is the link in the copyright section of the footer. You'll probably want to switch it out for a link to your company's about page or marketing site.</li>
        <li>Placeholder logo - To use your custom branding, you can simply replace the image file at <code>assets/images/logo.png</code> with a custom image of the same name, or change the image <code>src</code> in the header in <code>views/layouts/layout.ejs</code>.</li>
      </ul>
      <blockquote><small>Just a heads up, the previous couple paragraphs will make a lot less sense once you've done a find/replace on each of those placeholder words.</small></blockquote>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>How do I configure a new method to use with cloud.js?</h4>
      <p>Once you've created a controller action and added it to your routes (see the <a target="_blank" href="https://sailsjs.com/documentation/concepts/routes">Sails.js docs for more info on how to do that</a>), there are just a few simple steps to add it to your global <code>Cloud</code> SDK:</p>
      <ul>
        <li>Rebuild this app's custom SDK using <code>sails run scripts/rebuild-cloud-sdk</code>.  (This automatically regenerates the method definitions in your <code>assets/js/cloud.setup.js</code> file based on your configured routes.)</li>
        <li>You can then call any relevant new actions as "cloud methods" in your frontend code like so: <code>await Cloud.doSomething.with({…})</code></li>
      </ul>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>How do I register a new page with parasails.js?</h4>
      <p>To generate files for a new page (for example, "hotels-overview"), run:</p>
      <p><code>sails generate page hotels-overview</code></p>
      <p>Then you can add a route for the new view action to make it accessible from the browser.  For example:</p>
      <p><code>'GET /hotels': { action: 'view-hotels-overview' }</code></p>
      <p><small>To register a new page without the generator, make sure the top-level element of the view you wish to register has an <code>id</code> property (e.g. <code>&lt;div id="my-new-page"&gt;...&lt;/div&gt;</code>). Then, create a new javascript file, and include <code>parasails.registerPage('my-new-page', { /* options for the Vue.js instance */ })</code>. For more thorough examples, dig around in <code>assets/js/pages/</code>.</small></p>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>How do I deploy to Heroku?</h4>
      <p>In your <a target="_blank" href="https://dashboard.heroku.com">Heroku dashboard</a>, configure your app to auto-deploy from the <code>deploy</code> branch of this project's GitHub repository. Then, from the command line, run <code>sails run deploy</code>.</p>
      <p>For more deployment tips, <a href="https://sailsjs.com/documentation/concepts/deployment">click here</a>.</p>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>Do I have to host on Heroku?</h4>
      <p>No way!  You can deploy your app <a target="_blank" href="https://sailsjs.com/documentation/concepts/deployment/hosting">anywhere that supports Node.js</a>.</p>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>How do I verify my user's email addresses?</h4>
      <p>By default, email verification is neither required for signup, nor for when an existing user changes their email address from their account page.  To enable an email verification step for both of these actions, open <code>config/custom.js</code> and change <code>verifyEmailAddresses: false</code> to <code>verifyEmailAddresses: true</code>.</p>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>How do I finish setting up Mailgun?</h4>
      <p>To use Mailgun, you'll need to <a target="_blank" href="https://www.mailgun.com/">sign up for an account</a>. (While this <em>is</em> a paid service at higher usage levels, you should be able to use Mailgun as much as you need to in development without having to provide any credit card information.)</p>
      <p>After you've created an account, you'll need to add your Mailgun domain and API secret to your custom config. (In development, this will be either in <code>config/custom.js</code>, or in a <code>local.js</code> file you add to your <code>config/</code> folder. For your staging or production deployment, you'll want to set these using system environment variables -- aka "config variables" in Heroku.)</p>
      <p>If you already own a domain for your app, you can follow Mailgun's instructions for configuring a sending domain.</p>
      <p>Otherwise, to send emails from this app <em>without</em> configuring a sending domain, you can use the sandbox domain &amp; test API secret that comes with your Mailgun account. Just be sure to configure the authorized recipents for your sandbox domain first, or there will be errors from the endpoints that attempt to send emails.</p>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>How do I finish setting up Stripe?</h4>
      <p>To use Stripe for your app's payment processing, you'll need to <a target="_blank" href="https://stripe.com">sign up for an account</a>.</p>
      <p>Once you have an account, you'll need to include your publishable and secret keys in your app's custom config as <code>sails.config.custom.stripePublishableKey</code> and <code>sails.config.custom.stripeSecret</code>. In development, you can add your test keys to <code>config/custom.js</code>, or in a <code>local.js</code> file you add to your <code>config/</code> folder.</p>
      <p>In your staging or production deployment, you'll want to set your API keys using system environment variables (aka "config variables" in Heroku), and you will need ensure that your site meets Stripe's HTTPS requirements in order for Stripe Checkout to work. For more information, see Stripe's <a target="_blank" href="https://stripe.com/docs/checkout">Detailed Checkout Guide</a>.</p>
    </div>
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>How do I disable ___________?</h4>
      <p class="pt-4 text-muted"><strong><em>To disable the Bootstrap framework:</em></strong></p>
      <ul>
        <li>Delete the folder <code>assets/dependencies/bootstrap/</code></li>
        <li>In <code>tasks/pipeline.js</code>, delete <code>'dependencies/bootstrap/dependencies/**/*.js',</code> from <code>jsFilesToInject</code></li>
      </ul>
      <p class="pt-4 text-muted"><strong><em>To disable FontAwesome:</em></strong></p>
      <ul>
        <li>Delete the folder at <code>assets/dependencies/font-awesome-4/</code>. (You'll also likely want to search the project for "fa fa-" to check for any lingering icons in the HTML.)</li>
      </ul>
      <p class="pt-4 text-muted"><strong><em>To swap out Mailgun:</em></strong></p>
      <p>We chose Mailgun because of its very generous free tier (you can send up to 10,000 emails per month).  Plus it integrates easily, it's been around for a while (so it's stable and does a good job evading spam filters), and it's used internally at companies like GitHub and Heroku.</p>
      <p>Out-of-the box, if Mailgun is not configured for this app, the contact form and password recovery flow will fail outright unless an email address ending in "@example.com" is used.  Luckily, if you wish to use <a target="_blank" href="https://stackshare.io/mailgun/alternatives">a different solution for sending automated emails</a>, the logic for sending emails is fairly contained. To switch to a service other than Mailgun, you'll need to make the following changes to your code:</p>
      <ul>
        <li>Modify the code in <code>api/helpers/send-template-email.js</code> to use the email service of your choice.</li>
        <li>In <code>api/hooks/custom/index.js</code>, remove the warnings related to Mailgun.</li>
      </ul>
      <p class="pt-4 text-muted"><strong><em>To remove or replace Stripe integration:</em></strong></p>
      <p>We chose Stripe because it is the easiest-to-integrate payment processor in the industry.  Its rates are about the same <a target="_blank" href="https://stackshare.io/stripe/alternatives">as its competitors'</a>, but even if that weren't the case, Stripe's focus on developer happiness would probably make up for it.  Stripe processes payments, payouts, and more for <a target="_blank" href="https://stripe.com/us/customers">hundreds of thousands of businesses</a> all around the world.</p>
      <p>By default, features related to billing are automatically disabled if you don't have a Stripe publishable key &amp; secret key in your custom config (<code>sails.config.custom.stripePublishableKey</code> and <code>sails.config.custom.stripeSecret</code>, respectively). Your app will not be negatively impacted or appear broken; it will merely have some extraneous code in places. If you don't anticipate integrating billing features into your app and want to remove this code entirely, you can make the following changes:</p>
      <ul>
        <li>In the <code>User</code> model definition at <code>api/models/User.js</code>, remove the <code>stripeCustomerId</code>, <code>billingCardBrand</code>, <code>billingCardLast4</code>, <code>billingCardExpMonth</code>, and <code>billingCardExpYear</code> attribute definitions.</li>
        <li>In the "signup" action at <code>api/controllers/entrance/signup.js</code>:
          <ul>
            <li>Remove the line at the top requiring the Stripe dependency</li>
            <li>Remove the block of code creating a Stripe customer. (If you have trouble finding where this happens, be sure to read the comments.)</li>
            <li>In the call to <code>User.create()</code>, remove the <code>stripeCustomerId</code> property.</li>
          </ul>
        </li>
        <li>In the "confirm email" action at <code>api/controllers/entrance/confirm-email.js</code>:
          <ul>
            <li>Remove the line at the top requiring the Stripe dependency.</li>
            <li>Remove the block of code that handles creating/updating a Stripe customer. (If you have trouble finding where this happens, be sure to read the comments.)</li>
          </ul>
        </li>
        <li>Remove the update billing card endpoint and all references to it by doing the following:
          <ul>
            <li>Delete the file at <code>api/account/update-billing-card.js</code>.</li>
            <li>In <code>config/routes.js</code>, delete the route configuration for <code>'PUT /api/v1/account/update-billing-card'</code>.</li>
            <li>In <code>assets/js/cloud.setup.js</code>, delete the <code>updateBillingCard</code> method.</li>
            <li>In <code>assets/js/pages/account/my-account.page.js</code>, remove the <code>clickStripeCheckoutButton</code> method.</li>
            <li>In <code>views/pages/account/my-account.ejs</code>, remove the HTML related to billing.</li>
          </ul>
        </li>
        <li>In <code>api/hooks/custom/index.js</code>, remove the warnings related to Stripe.</li>
        <li>In <code>api/hooks/custom/index.js</code>, remove <code>sails.config.custom.enableBillingFeatures = !isMissingStripeConfig;</code>.</li>
      </ul>
    </div> -->
    <div class="q-and-a">
      <hr class="mt-4 mb-4"/>
      <h4>Where can I go for more help?</h4>
      <p>If you run into trouble, you can often find the answer in the <a target="_blank" href="https://discord.gg/pinotsgames">Official Discord</a> community.  If you can't find it there, please be sure to reach out to our <a href="/contact/">support</a> and let us know exactly what you need.</p>
    </div>
  </div>
</div>
<%- /* Expose locals as `window.SAILS_LOCALS` :: */ exposeLocalsToBrowser() %>
